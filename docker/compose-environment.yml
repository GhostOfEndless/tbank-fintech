services:
  db:
    image: postgres:17
    container_name: postgres
    restart: unless-stopped
    env_file:
      - .env
    ports:
      - '${POSTGRES_PORT}:5432'
    environment:
      POSTGRES_PASSWORD: $POSTGRES_PASSWORD
      POSTGRES_USER: $POSTGRES_USER
      POSTGRES_DB: $POSTGRES_DB
    volumes:
      - kudago-db:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}" ]
      interval: 3s
      timeout: 5s
    networks:
      - app-tier

  migration:
    image: liquibase:4.29.2
    container_name: liquibase
    restart: on-failure
    depends_on:
      db:
        condition: service_healthy
    command: [
      "--url=jdbc:postgresql://postgres:5432/${POSTGRES_DB}",
      "--username=${POSTGRES_USER}",
      "--password=${POSTGRES_PASSWORD}",
      "--search-path=/liquibase/changelog/",
      "--driver=org.postgresql.Driver",
      "--changeLogFile=db-changelog.yaml",
      "update"
    ]
    volumes:
      - ../migrations/db/changelog:/liquibase/changelog/
    networks:
      - app-tier

  rabbitmq:
    image: rabbitmq:management
    hostname: rabbitmq
    restart: unless-stopped
    volumes:
      - rabbit:/rabbitmq:/var/lib/rabbitmq
    ports:
      - '15672:15672'
      - '5672:5672'
    networks:
      - app-tier

  kafka:
    image: &kafka-image bitnami/kafka:3.8
    ports:
      - '9094:9094'
    container_name: kafka
    networks:
      - app-tier
    environment:
      # KRaft settings
      KAFKA_CFG_NODE_ID: 0
      KAFKA_CFG_PROCESS_ROLES: controller,broker
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: 0@kafka:9093
      # Listeners
      KAFKA_CFG_LISTENERS: PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://:9092,EXTERNAL://localhost:9094
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CFG_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      # Clustering
      KAFKA_CFG_NUM_PARTITIONS: 1
    volumes:
      - kafka_data_test:/bitnami/kafka
    healthcheck:
      test: [ "CMD", "kafka-topics.sh", "--bootstrap-server=localhost:9092", "--list" ]
      start_period: 15s
      interval: 10s

  init-kafka:
    image: *kafka-image
    container_name: init-kafka
    networks:
      - app-tier
    working_dir: /opt/bitnami/kafka/bin
    entrypoint: /bin/bash
    depends_on:
      kafka:
        condition: service_healthy
    command: |
      -c "
      kafka-topics.sh --create --if-not-exists --topic topic --bootstrap-server kafka:9092
      kafka-topics.sh --describe --bootstrap-server kafka:9092
      "

networks:
  app-tier:
    name: app-tier
    driver: bridge

volumes:
  kudago-db:
    name: kudago-db
    driver: local
  rabbit:
    name: rabbit
    driver: local
  kafka_data_test:
    name: kafka_data_test
    driver: local